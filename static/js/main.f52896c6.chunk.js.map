{"version":3,"sources":["utils/ipfsURIToGatewayURI.ts","hooks/useQuery.ts","hooks/useMetadata.ts","constants.ts","hooks/useWeb3Provider.ts","hooks/useContract.ts","hooks/useWalletConnectPageState.ts","hooks/useItemOwnerAddress.ts","i18n/config.ts","components/ItemInfoTable.tsx","components/buyerview/BuyerActionArea.tsx","components/buyerview/BuyerView.tsx","components/sellerview/ApproveButton.tsx","components/sellerview/PriceSelect.tsx","utils/weiPrice.ts","components/sellerview/SellButton.tsx","components/sellerview/SellerActionArea.tsx","components/sellerview/SellerView.tsx","components/cancelerview/CancelerActionArea.tsx","components/cancelerview/CancelerView.tsx","WalletConnectPage.tsx","App.tsx","reportWebVitals.ts","index.tsx","logo.svg"],"names":["ipfsURIToGatewayURI","_ref","ipfsURI","startsWith","NFT_STORAGE_IPFS_GATEWAY_URI","replace","useQuery","search","useLocation","query","useMemo","URLSearchParams","tradeID","parseInt","get","poster","itemID","price","MetadataContainer","createContainer","_useState","useState","_useState2","Object","slicedToArray","error","setError","_useState3","_useState4","metadata","setMetadata","fetchMetadata","useCallback","asyncToGenerator","regenerator_default","a","mark","_callee","tokenContract","tokenURI","response","wrap","_context","prev","next","abrupt","sent","fetch","ok","t0","json","t1","t2","Error","text","t3","t4","console","log","message","stop","_x","apply","this","arguments","CUBIFOX_MARKET_CONTRACT_ADDRESS","CUBIFOX_MARKET_CONTRACT_ABI","CUBIFOX_TOKEN_CONTRACT_ABI","Web3ProviderContainer","currentUserAddress","setCurrentUserAddress","wcProvider","setWCProvider","setupWCProvider","provider","WalletConnectProvider","rpc","80001","infuraId","enable","checkNetworkIsCorrect","_ref2","_callee2","currentNetwork","_context2","getNetwork","chainId","getCurrentUser","_ref3","_callee3","accounts","_context3","request","method","_x2","ContractContainer","marketContract","setMarketContract","setTokenContract","linkMarketContract","signer","getSigner","contract","ethers","Contract","connect","err","linkTokenContract","contractWithSigner","WalletConnectPageStateContainer","preparingState","setPreparingState","userType","setUserType","_useState5","_useState6","sellingState","setSellingState","_useState7","_useState8","buyingState","setBuyingState","_useState9","_useState10","cancelingState","setCancelingState","ItemOwnerAddressContainer","_useQuery","_WalletConnectPageSta","useContainer","itemOwnerAddress","setItemOwnerAddress","resolveCurrentOwner","address","ownerOf","toUpperCase","undefined","concat","resources","ja","wcp","en","i18n","use","initReactI18next","init","lng","ns","interpolation","escapeValue","debug","process","ItemInfoTable","itemBelongsCurrentUser","t","useTranslation","_ItemOwnerAddressCont","useEffect","react_default","createElement","name","description","style","maxWidth","src","image","Fragment","BuyerActionArea","onBuy","wei","tx","result","utils","parseUnits","toString","executeTrade","value","wait","status","className","onClick","objectSpread","BuyerView","setItemBelongsCurrentUser","ItemInfoTable_ItemInfoTable","BuyerActionArea_BuyerActionArea","ApproveButton","approve","PriceSelect","unit","setPrice","setUnit","type","min","onChange","e","target","weiPrice","BigInt","Math","pow","SellButton","onSell","openTrade","disabled","SellerActionArea","ApproveButton_ApproveButton","PriceSelect_PriceSelect","SellButton_SellButton","SellerView","timer","setInterval","getApproved","clearInterval","includes","SellerActionArea_SellerActionArea","CancelerActionArea","onCancel","cancelTrade","CancelerView","CancelerActionArea_CancelerActionArea","WalletConnectPage","_Web3ProviderContaine","_ContractContainer$us","_MetadataContainer$us","providers","Web3Provider","getCode","window","location","reload","then","onDisconnect","disconnect","localStorage","removeItem","BuyerView_BuyerView","SellerView_SellerView","CancelerView_CancelerView","App","react_router_dom","Provider","logo","alt","react_router","path","element","WalletConnectPage_WalletConnectPage","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App","module","exports","p"],"mappings":"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","file":"static/js/main.f52896c6.chunk.js","sourcesContent":["const NFT_STORAGE_IPFS_GATEWAY_URI = \"https://nftstorage.link\";\n\nexport const ipfsURIToGatewayURI = ({ ipfsURI }: { ipfsURI: string }) => {\n  if (ipfsURI.startsWith(\"https\")) {\n    return ipfsURI;\n  }\n  const uri =\n    NFT_STORAGE_IPFS_GATEWAY_URI + \"/ipfs/\" + ipfsURI.replace(\"ipfs://\", \"\");\n  return uri;\n};\n","import { useMemo } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\n// [期待するqueryStringのパラメーター]\n// * Userが Seller の時\n//   - itemID\n// * Userが Buyer の時\n//   - tradeID\n//   - poster\n//   - itemID\n//   - price\nexport const useQuery = () => {\n  const { search } = useLocation();\n  const query = useMemo(() => new URLSearchParams(search), [search]);\n\n  return {\n    tradeID: parseInt(query.get(\"tradeID\")!),\n    poster: query.get(\"poster\")!,\n    itemID: parseInt(query.get(\"itemID\")!),\n    price: parseInt(query.get(\"price\")!),\n  };\n};\n","import { useState, useCallback } from \"react\";\nimport { Metadata } from \"../types/Metadata\";\nimport { ipfsURIToGatewayURI } from \"../utils/ipfsURIToGatewayURI\";\nimport { useQuery } from \"./useQuery\";\nimport { ethers } from \"ethers\";\nimport { createContainer } from \"unstated-next\";\n\nconst useMetadata = () => {\n  const { itemID } = useQuery();\n\n  const [error, setError] = useState<string | null>(null);\n  const [metadata, setMetadata] = useState<Metadata>();\n\n  const fetchMetadata = useCallback(\n    async (tokenContract: ethers.Contract) => {\n      let error: Error;\n      setError(null);\n\n      if (!itemID) return;\n\n      try {\n        const tokenURI = await tokenContract.tokenURI(itemID);\n        const response = await fetch(\n          ipfsURIToGatewayURI({ ipfsURI: tokenURI })\n        );\n        if (response.ok) {\n          setMetadata(await response.json());\n        } else {\n          return Error(await response.text());\n        }\n      } catch (err) {\n        console.log(\"err\", err);\n        error = err as Error;\n        setError(error.message);\n        return error;\n      }\n\n      return;\n    },\n    [itemID]\n  );\n  return { metadata, fetchMetadata, error };\n};\n\nexport const MetadataContainer = createContainer(useMetadata);\n","export const CUBIFOX_MARKET_CONTRACT_ADDRESS =\n  \"0xa55E0A9F4DB29c03EfAb9D063B03309b73Cf32AA\";\n\nexport const CUBIFOX_MARKET_CONTRACT_ABI = [\n  \"function tradeIdCounter() view returns (uint256)\",\n  \"function openTrade(uint256 _itemId, uint256 _price)\",\n  \"function executeTrade(uint256 _tradeId) payable\",\n  \"function cancelTrade(uint256 _tradeId)\",\n];\n\nexport const CUBIFOX_TOKEN_CONTRACT_ADDRESS =\n  \"0x9967a309fce3De66A70704431338a3d086509732\";\n\nexport const CUBIFOX_TOKEN_CONTRACT_ABI = [\n  \"function approve(address to, uint256 tokenId)\",\n  \"function getApproved(uint256 tokenId) view returns (address operator)\",\n  \"function tokenURI(uint256 tokenId) public view returns (string memory)\",\n  \"function ownerOf(uint256 tokenId) public view returns (address)\",\n];\n\nexport const WEB3_RPC_URL =\n  \"https://polygon-mumbai.infura.io/v3/1622077723654f928aaae17148265be5\";\n\nexport const INFURA_ID = \"1622077723654f928aaae17148265be5\";\n","import WalletConnectProvider from \"@walletconnect/ethereum-provider\";\nimport { ethers, providers } from \"ethers\";\nimport { useState, useCallback } from \"react\";\nimport { createContainer } from \"unstated-next\";\nimport { INFURA_ID, WEB3_RPC_URL } from \"../constants\";\n\nconst useProvider = () => {\n  const [currentUserAddress, setCurrentUserAddress] = useState<String>();\n  const [wcProvider, setWCProvider] = useState<WalletConnectProvider>();\n\n  const setupWCProvider = useCallback(async () => {\n    const provider = new WalletConnectProvider({\n      rpc: {\n        80001: WEB3_RPC_URL,\n      },\n      infuraId: INFURA_ID,\n      // qrcodeModalOptions: {\n      //   mobileLinks: [\n      //     \"rainbow\",\n      //     \"metamask\",\n      //     \"argent\",\n      //     \"trust\",\n      //     \"imtoken\",\n      //     \"pillar\",\n      //   ],\n      // },\n    });\n    //  Enable session (triggers QR Code modal)\n    await provider.enable();\n\n    setWCProvider(provider);\n    return provider;\n  }, []);\n\n  const checkNetworkIsCorrect = useCallback(\n    async (provider: providers.Web3Provider) => {\n      const currentNetwork = await provider.getNetwork();\n      return currentNetwork.chainId == 80001;\n    },\n    []\n  );\n\n  const getCurrentUser = useCallback(\n    async (provider: WalletConnectProvider) => {\n      const accounts: [string] = await provider.request({\n        method: \"eth_requestAccounts\",\n      });\n      setCurrentUserAddress(accounts[0]);\n    },\n    [setCurrentUserAddress]\n  );\n\n  return {\n    currentUserAddress,\n    wcProvider,\n    setWCProvider,\n    setupWCProvider,\n    checkNetworkIsCorrect,\n    getCurrentUser,\n  };\n};\n\nexport const Web3ProviderContainer = createContainer(useProvider);\n","import { useState, useCallback } from \"react\";\nimport { ethers } from \"ethers\";\nimport { createContainer } from \"unstated-next\";\nimport {\n  CUBIFOX_MARKET_CONTRACT_ADDRESS,\n  CUBIFOX_MARKET_CONTRACT_ABI,\n  CUBIFOX_TOKEN_CONTRACT_ADDRESS,\n  CUBIFOX_TOKEN_CONTRACT_ABI,\n} from \"../constants\";\n\nconst useContract = () => {\n  const [marketContract, setMarketContract] = useState<ethers.Contract>();\n  const [tokenContract, setTokenContract] = useState<ethers.Contract>();\n\n  const linkMarketContract = useCallback(\n    (provider: ethers.providers.Web3Provider) => {\n      try {\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(\n          CUBIFOX_MARKET_CONTRACT_ADDRESS,\n          CUBIFOX_MARKET_CONTRACT_ABI,\n          provider\n        );\n        setMarketContract(contract.connect(signer));\n      } catch (err) {\n        throw err;\n      }\n    },\n    [setMarketContract]\n  );\n\n  const linkTokenContract = useCallback(\n    (provider: ethers.providers.Web3Provider) => {\n      try {\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(\n          CUBIFOX_TOKEN_CONTRACT_ADDRESS,\n          CUBIFOX_TOKEN_CONTRACT_ABI,\n          provider\n        );\n        const contractWithSigner = contract.connect(signer);\n        setTokenContract(contractWithSigner);\n        return contractWithSigner;\n      } catch (err) {\n        throw err;\n      }\n    },\n    [setTokenContract]\n  );\n\n  return {\n    marketContract,\n    tokenContract,\n    linkMarketContract,\n    linkTokenContract,\n  };\n};\n\nexport const ContractContainer = createContainer(useContract);\n","import { useState } from \"react\";\nimport { BuyingState } from \"../types/BuyingState\";\nimport { PreparingState } from \"../types/PreparingState\";\nimport { SellingState } from \"../types/SellingState\";\nimport { UserType } from \"../types/UserType\";\nimport { createContainer } from \"unstated-next\";\nimport { CancelingState } from \"../types/CancelingState\";\n\nconst useWalletConnectPageState = () => {\n  const [preparingState, setPreparingState] = useState<PreparingState>(\n    \"setupProvider\"\n  );\n  const [userType, setUserType] = useState<UserType>();\n  const [sellingState, setSellingState] = useState<SellingState>();\n  const [buyingState, setBuyingState] = useState<BuyingState>();\n  const [cancelingState, setCancelingState] = useState<CancelingState>();\n\n  return {\n    preparingState,\n    setPreparingState,\n    userType,\n    setUserType,\n    sellingState,\n    setSellingState,\n    buyingState,\n    setBuyingState,\n    cancelingState,\n    setCancelingState,\n  };\n};\n\nexport const WalletConnectPageStateContainer = createContainer(\n  useWalletConnectPageState\n);\n","import { useState, useEffect, useCallback } from \"react\";\nimport { BuyingState } from \"../types/BuyingState\";\nimport { SellingState } from \"../types/SellingState\";\nimport { useQuery } from \"./useQuery\";\nimport { ContractContainer } from \"./useContract\";\nimport { CUBIFOX_MARKET_CONTRACT_ADDRESS } from \"../constants\";\nimport { createContainer } from \"unstated-next\";\nimport { WalletConnectPageStateContainer } from \"./useWalletConnectPageState\";\n\n// useItemOwnerAddress() は状況に応じた itemOwnerAddress を返す\n//\n// [BuyerViewの場合]\n// 1. 基本は tokenContract.ownerOf で取得した値\n// 2. 1で取得した値がMarketContractだった場合はposter\n//\n// [SellerViewの場合]\n// 1. 基本は tokenContract.ownerOf で取得した値\n// 2. 1で取得した値がMarketContractだった場合は \"Cubifox Market\"\nconst useItemOwnerAddress = () => {\n  const { poster, itemID } = useQuery();\n  const {\n    buyingState,\n    sellingState,\n  } = WalletConnectPageStateContainer.useContainer();\n  const { tokenContract } = ContractContainer.useContainer();\n  const [itemOwnerAddress, setItemOwnerAddress] = useState<String>();\n\n  const resolveCurrentOwner = useCallback(async () => {\n    if (!tokenContract || !itemID) return;\n    let address: string = \"\";\n\n    // BuyerViewの場合の1\n    // SellerViewの場合の1\n    try {\n      address = await tokenContract.ownerOf(itemID);\n      setItemOwnerAddress(address);\n    } catch (err) {\n      console.log(\"err\", err);\n    }\n\n    // BuyerViewの場合の2\n    if (\n      address.toUpperCase() == CUBIFOX_MARKET_CONTRACT_ADDRESS.toUpperCase() &&\n      buyingState != undefined\n    ) {\n      setItemOwnerAddress(poster);\n    }\n\n    // SellerViewの場合の2\n    if (\n      address.toUpperCase() == CUBIFOX_MARKET_CONTRACT_ADDRESS.toUpperCase() &&\n      sellingState != undefined\n    ) {\n      setItemOwnerAddress(\n        `Cubifox Market (${CUBIFOX_MARKET_CONTRACT_ADDRESS})`\n      );\n    }\n  }, [itemID, tokenContract, sellingState, buyingState]);\n\n  return { itemOwnerAddress, resolveCurrentOwner };\n};\n\nexport const ItemOwnerAddressContainer = createContainer(useItemOwnerAddress);\n","import i18n from \"i18next\";\nimport wcp from \"./ja/wallet_connect_page.json\";\nimport { initReactI18next } from \"react-i18next\";\n\nexport const resources = {\n  ja: {\n    wcp,\n  },\n  en: {\n    wcp,\n  },\n} as const;\n\ni18n.use(initReactI18next).init({\n  lng: \"ja\",\n  ns: [\"wcp\"],\n  interpolation: {\n    escapeValue: false, // not needed for react as it escapes by default\n  },\n  resources,\n  debug: process.env.NODE_ENV === \"development\",\n});\n","import React, { useEffect } from \"react\";\nimport { ItemOwnerAddressContainer } from \"../hooks/useItemOwnerAddress\";\nimport { MetadataContainer } from \"../hooks/useMetadata\";\nimport { useQuery } from \"../hooks/useQuery\";\nimport { BuyingState } from \"../types/BuyingState\";\nimport { SellingState } from \"../types/SellingState\";\nimport { ipfsURIToGatewayURI } from \"../utils/ipfsURIToGatewayURI\";\nimport { Web3ProviderContainer } from \"../hooks/useWeb3Provider\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./../i18n/config\";\nimport { CancelingState } from \"../types/CancelingState\";\n\nexport const ItemInfoTable = ({\n  buyingState,\n  sellingState,\n  cancelingState,\n  itemBelongsCurrentUser,\n}: {\n  buyingState?: BuyingState;\n  sellingState?: SellingState;\n  cancelingState?: CancelingState;\n  itemBelongsCurrentUser?: boolean;\n}) => {\n  const { t } = useTranslation([\"wcp\"]);\n  const { price } = useQuery();\n  const { currentUserAddress } = Web3ProviderContainer.useContainer();\n  const { metadata } = MetadataContainer.useContainer();\n  const {\n    itemOwnerAddress,\n    resolveCurrentOwner,\n  } = ItemOwnerAddressContainer.useContainer();\n\n  useEffect(() => {\n    (async () => {\n      await resolveCurrentOwner();\n    })();\n  }, [buyingState, sellingState, cancelingState, itemOwnerAddress]);\n\n  if (!metadata) return null;\n  return (\n    <table>\n      <tbody>\n        <tr>\n          <th>{t(\"wcp:itemInfo:yourAddress\")}</th>\n          <td>{currentUserAddress}</td>\n        </tr>\n        <tr>\n          <th>{t(\"wcp:itemInfo:itemName\")}</th>\n          <td>{metadata.name}</td>\n        </tr>\n        <tr>\n          <th>{t(\"wcp:itemInfo:itemDescription\")}</th>\n          <td>{metadata.description}</td>\n        </tr>\n        <tr>\n          <th>{t(\"wcp:itemInfo:itemImage\")}</th>\n          <td>\n            <img\n              style={{ maxWidth: \"50vw\" }}\n              src={ipfsURIToGatewayURI({ ipfsURI: metadata.image })}\n            />\n          </td>\n        </tr>\n        <tr>\n          <th>{t(\"wcp:itemInfo:currentOwner\")}</th>\n          <td>{itemOwnerAddress}</td>\n        </tr>\n        {price && !itemBelongsCurrentUser ? (\n          <tr>\n            <th>{t(\"wcp:itemInfo:price\")}</th>\n            <td>{price} Wei MATIC</td>\n          </tr>\n        ) : (\n          <></>\n        )}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useCallback } from \"react\";\nimport { ethers } from \"ethers\";\nimport { useQuery } from \"../../hooks/useQuery\";\nimport { ContractContainer } from \"../../hooks/useContract\";\nimport { WalletConnectPageStateContainer } from \"../../hooks/useWalletConnectPageState\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./../../i18n/config\";\n\nexport const BuyerActionArea = ({\n  itemBelongsCurrentUser,\n}: {\n  itemBelongsCurrentUser: boolean;\n}) => {\n  const { t } = useTranslation([\"wcp\"]);\n  const { tradeID, price } = useQuery();\n  const {\n    setBuyingState,\n    buyingState,\n  } = WalletConnectPageStateContainer.useContainer();\n  const { marketContract } = ContractContainer.useContainer();\n\n  const onBuy = useCallback(\n    async ({ tradeID, price }: { tradeID: number; price: number }) => {\n      setBuyingState(\"executing\");\n      try {\n        const wei = ethers.utils.parseUnits(price.toString(), \"wei\");\n        console.log(\"price: \", wei);\n        const tx: ethers.providers.TransactionResponse = await marketContract!.executeTrade(\n          tradeID,\n          { value: wei }\n        );\n        const result = await tx.wait();\n\n        if (result.status == 1) {\n          setBuyingState(\"success\");\n        } else {\n          // 失敗するトランザクションは metamask 実行前にはじかれるはずなのでここは通らないかもしれない\n          console.log(\"failure [result]:\", result);\n          setBuyingState(\"failure\");\n        }\n      } catch (err) {\n        console.log(err);\n        setBuyingState(\"failure\");\n      }\n    },\n    []\n  );\n\n  if (itemBelongsCurrentUser || buyingState == \"success\") return null;\n\n  if (buyingState == \"executing\")\n    return <p className=\"message\">{t(\"wcp:buyer:action:message:executing\")}</p>;\n\n  if (buyingState == \"failure\")\n    return <p className=\"message\">{t(\"wcp:buyer:action:message:failure\")}</p>;\n\n  return (\n    <button onClick={() => onBuy({ ...{ tradeID, price } })}>\n      {t(\"wcp:buyer:action:button:buy\")}\n    </button>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { ItemInfoTable } from \"../ItemInfoTable\";\nimport { WalletConnectPageStateContainer } from \"../../hooks/useWalletConnectPageState\";\nimport { ItemOwnerAddressContainer } from \"../../hooks/useItemOwnerAddress\";\nimport { Web3ProviderContainer } from \"../../hooks/useWeb3Provider\";\nimport { BuyerActionArea } from \"./BuyerActionArea\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./../../i18n/config\";\n\nexport const BuyerView = () => {\n  const { t } = useTranslation([\"wcp\"]);\n  const {\n    buyingState,\n    setBuyingState,\n  } = WalletConnectPageStateContainer.useContainer();\n  const { itemOwnerAddress } = ItemOwnerAddressContainer.useContainer();\n  const { currentUserAddress } = Web3ProviderContainer.useContainer();\n  const [itemBelongsCurrentUser, setItemBelongsCurrentUser] = useState(false);\n\n  useEffect(() => {\n    setBuyingState(\"init\");\n  }, []);\n\n  // itemOwner が currentUser かチェックする\n  useEffect(() => {\n    if (!currentUserAddress || !itemOwnerAddress) return;\n\n    if (currentUserAddress.toUpperCase() == itemOwnerAddress.toUpperCase()) {\n      setItemBelongsCurrentUser(true);\n    }\n  }, [itemOwnerAddress, currentUserAddress]);\n\n  return (\n    <>\n      {itemBelongsCurrentUser ? (\n        <p>{t(\"wcp:buyer:successTitle\")}</p>\n      ) : (\n        <p>{t(\"wcp:buyer:title\")}</p>\n      )}\n\n      <ItemInfoTable\n        buyingState={buyingState}\n        itemBelongsCurrentUser={itemBelongsCurrentUser}\n      />\n      <BuyerActionArea {...{ itemBelongsCurrentUser }} />\n    </>\n  );\n};\n","import React, { useCallback } from \"react\";\nimport { useQuery } from \"../../hooks/useQuery\";\nimport { ContractContainer } from \"../../hooks/useContract\";\nimport { ethers } from \"ethers\";\nimport { WalletConnectPageStateContainer } from \"../../hooks/useWalletConnectPageState\";\nimport { CUBIFOX_MARKET_CONTRACT_ADDRESS } from \"../../constants\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./../../i18n/config\";\n\n// Contract に ERC721トークン を transfer するために approve してもらう必要がある\n// https://github.com/OpenZeppelin/openzeppelin-contracts/blob/cb3f2ab900e39c5ab6e0de6663edf06f573b834f/contracts/token/ERC721/IERC721.sol#L61-L79\nexport const ApproveButton = () => {\n  const { t } = useTranslation([\"wcp\"]);\n  const { itemID } = useQuery();\n  const { tokenContract } = ContractContainer.useContainer();\n  const { setSellingState } = WalletConnectPageStateContainer.useContainer();\n  const onClick = useCallback(\n    async ({ itemID }: { itemID: number }) => {\n      setSellingState(\"givingPermission\");\n      try {\n        const tx: ethers.providers.TransactionResponse = await tokenContract!.approve(\n          CUBIFOX_MARKET_CONTRACT_ADDRESS,\n          itemID\n        );\n        const result = await tx.wait();\n        if (result.status == 1) {\n          setSellingState(\"permitted\");\n        } else {\n          // 失敗するトランザクションは metamask 実行前にはじかれるはずなのでここは通らないかもしれない\n          setSellingState(\"failure\");\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    [tokenContract]\n  );\n\n  return (\n    <button onClick={() => onClick({ itemID })}>\n      {t(\"wcp:seller:action:button:approve\")}\n    </button>\n  );\n};\n","import React, { ChangeEvent } from \"react\";\nimport { MaticUnit } from \"../../types/MaticUnit\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./../../i18n/config\";\n\nexport const PriceSelect = ({\n  price,\n  unit,\n  setPrice,\n  setUnit,\n}: {\n  price: number;\n  unit: MaticUnit;\n  setPrice: React.Dispatch<React.SetStateAction<number>>;\n  setUnit: React.Dispatch<React.SetStateAction<MaticUnit>>;\n}) => {\n  const { t } = useTranslation([\"wcp\"]);\n  return (\n    <span>\n      <label>{t(\"wcp:seller:action:label:price\")}</label>\n      <input\n        type=\"number\"\n        min=\"0\"\n        value={price}\n        onChange={(e: ChangeEvent<HTMLInputElement>) => {\n          setPrice(parseInt(e.target.value));\n        }}\n      />\n      <select\n        value={unit}\n        onChange={(e) => {\n          setUnit(e.target.value as MaticUnit);\n        }}\n      >\n        <option value=\"weiMatic\">wei MATIC</option>\n        <option value=\"gweiMatic\">gwei MATIC</option>\n        <option value=\"matic\">MATIC</option>\n      </select>\n    </span>\n  );\n};\n","import { MaticUnit } from \"../types/MaticUnit\";\n\nexport const weiPrice = ({\n  price,\n  unit,\n}: {\n  price: number;\n  unit: MaticUnit;\n}): BigInt => {\n  if (unit == \"weiMatic\") {\n    return BigInt(price);\n  } else if (unit == \"gweiMatic\") {\n    return BigInt(price * 10 ** 9);\n  } else {\n    return BigInt(price * 10 ** 18);\n  }\n};\n","import React, { useCallback } from \"react\";\nimport { ethers } from \"ethers\";\nimport { weiPrice } from \"../../utils/weiPrice\";\nimport { MaticUnit } from \"../../types/MaticUnit\";\nimport { useQuery } from \"../../hooks/useQuery\";\nimport { ContractContainer } from \"../../hooks/useContract\";\nimport { WalletConnectPageStateContainer } from \"../../hooks/useWalletConnectPageState\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./../../i18n/config\";\n\nexport const SellButton = ({\n  price,\n  unit,\n}: {\n  price: number;\n  unit: MaticUnit;\n}) => {\n  const { t } = useTranslation([\"wcp\"]);\n  const { itemID } = useQuery();\n  const { marketContract } = ContractContainer.useContainer();\n  const { setSellingState } = WalletConnectPageStateContainer.useContainer();\n\n  const onSell = useCallback(async () => {\n    try {\n      setSellingState(\"executing\");\n      const wei = ethers.utils.parseUnits(\n        weiPrice({ price: price, unit: unit }).toString(),\n        \"wei\"\n      );\n      const tx: ethers.providers.TransactionResponse = await marketContract!.openTrade(\n        itemID,\n        wei\n      );\n      const result = await tx.wait();\n      if (result.status == 1) {\n        setSellingState(\"success\");\n      } else {\n        // 失敗するトランザクションは metamask 実行前にはじかれるはずなのでここは通らないかもしれない\n        setSellingState(\"failure\");\n      }\n    } catch (err) {\n      console.log(err);\n      setSellingState(\"failure\");\n    }\n  }, [marketContract, price]);\n\n  if (price >= 0)\n    return (\n      <button onClick={onSell}>{t(\"wcp:seller:action:button:sell\")}</button>\n    );\n\n  return <button disabled>{t(\"wcp:seller:action:button:sell\")}</button>;\n};\n","import React, { useState } from \"react\";\nimport { MaticUnit } from \"../../types/MaticUnit\";\nimport { ApproveButton } from \"./ApproveButton\";\nimport { PriceSelect } from \"./PriceSelect\";\nimport { SellButton } from \"./SellButton\";\nimport { WalletConnectPageStateContainer } from \"../../hooks/useWalletConnectPageState\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./../../i18n/config\";\n\nexport const SellerActionArea = ({\n  itemBelongsCurrentUser,\n}: {\n  itemBelongsCurrentUser: boolean;\n}) => {\n  const { t } = useTranslation([\"wcp\"]);\n  const [price, setPrice] = useState<number>(0);\n  const [unit, setUnit] = useState<MaticUnit>(\"weiMatic\");\n  const { sellingState } = WalletConnectPageStateContainer.useContainer();\n\n  if (!itemBelongsCurrentUser || sellingState == \"success\") return null;\n\n  if (sellingState == \"init\")\n    return (\n      <>\n        <p className=\"description\">\n          {t(\"wcp:seller:action:message:description\")}\n        </p>\n        <ApproveButton />\n      </>\n    );\n\n  if (sellingState == \"givingPermission\" || sellingState == \"executing\")\n    return (\n      <p className=\"message\">{t(\"wcp:seller:action:message:executing\")}</p>\n    );\n\n  if (sellingState == \"permitted\")\n    return (\n      <>\n        <PriceSelect {...{ price, unit, setPrice, setUnit }} />\n        <SellButton price={price} unit={unit} />\n      </>\n    );\n\n  if (sellingState == \"failure\")\n    return <p className=\"message\">{t(\"wcp:seller:action:message:failure\")}</p>;\n\n  return null;\n};\n","import React, { useCallback, useEffect } from \"react\";\nimport { ItemInfoTable } from \"../ItemInfoTable\";\nimport { SellerActionArea } from \"./SellerActionArea\";\nimport { useQuery } from \"../../hooks/useQuery\";\nimport { ContractContainer } from \"../../hooks/useContract\";\nimport { WalletConnectPageStateContainer } from \"../../hooks/useWalletConnectPageState\";\nimport { CUBIFOX_MARKET_CONTRACT_ADDRESS } from \"../../constants\";\nimport { ItemOwnerAddressContainer } from \"../../hooks/useItemOwnerAddress\";\nimport { Web3ProviderContainer } from \"../../hooks/useWeb3Provider\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./../../i18n/config\";\n\nexport const SellerView = () => {\n  const { t } = useTranslation([\"wcp\"]);\n  const { itemID } = useQuery();\n  const { tokenContract } = ContractContainer.useContainer();\n  const {\n    sellingState,\n    setSellingState,\n  } = WalletConnectPageStateContainer.useContainer();\n  const {\n    itemOwnerAddress,\n    resolveCurrentOwner,\n  } = ItemOwnerAddressContainer.useContainer();\n  const { currentUserAddress } = Web3ProviderContainer.useContainer();\n\n  // sellingStateを初期化\n  useEffect(() => {\n    setSellingState(\"init\");\n  }, []);\n\n  // sellingStateが init か success の時にitemOwnerを再取得する\n  useEffect(() => {\n    if (sellingState == \"success\" || sellingState == \"init\") {\n      (async () => {\n        resolveCurrentOwner();\n      })();\n    }\n  }, [sellingState]);\n\n  // sellingState が givingPermission の時 tokenContract.getApproved() を3秒ごとに実行する\n  useEffect(() => {\n    if (!tokenContract) return;\n    if (sellingState != \"givingPermission\") return;\n\n    const timer = setInterval(async () => {\n      try {\n        const approvedOperator = await tokenContract.getApproved(itemID);\n        if (approvedOperator == CUBIFOX_MARKET_CONTRACT_ADDRESS) {\n          setSellingState(\"permitted\");\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }, 3000);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, [tokenContract, sellingState]);\n\n  const itemBelongsCurrentUser = useCallback(() => {\n    if (!currentUserAddress || !itemOwnerAddress) return false;\n    return currentUserAddress.toUpperCase() === itemOwnerAddress.toUpperCase();\n  }, [currentUserAddress, itemOwnerAddress]);\n\n  const titleText = (): string => {\n    //ユーザーがアイテムの正しい所有者の時\n    if (itemBelongsCurrentUser()) {\n      return t(\"wcp:seller:title\");\n    }\n    // アイテムをCubifoxが所有時している場合\n    if (\n      itemOwnerAddress &&\n      itemOwnerAddress!.includes(CUBIFOX_MARKET_CONTRACT_ADDRESS)\n    ) {\n      return t(\"wcp:seller:successTitle\");\n    }\n    // ユーザーがアイテムの正しい所有者でない時\n    else if (itemOwnerAddress != currentUserAddress) {\n      return t(\"wcp:seller:wrongAccountTitle\");\n    }\n    return \"\";\n  };\n\n  return (\n    <>\n      <p>{titleText()}</p>\n\n      <ItemInfoTable sellingState={sellingState} />\n      <SellerActionArea itemBelongsCurrentUser={itemBelongsCurrentUser()} />\n    </>\n  );\n};\n","import React, { useCallback } from \"react\";\nimport { ethers } from \"ethers\";\nimport { useQuery } from \"../../hooks/useQuery\";\nimport { ContractContainer } from \"../../hooks/useContract\";\nimport { WalletConnectPageStateContainer } from \"../../hooks/useWalletConnectPageState\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./../../i18n/config\";\nimport { Web3ProviderContainer } from \"../../hooks/useWeb3Provider\";\n\nexport const CancelerActionArea = ({\n  itemBelongsCurrentUser,\n}: {\n  itemBelongsCurrentUser: boolean;\n}) => {\n  const { t } = useTranslation([\"wcp\"]);\n  const { tradeID, poster } = useQuery();\n  const { currentUserAddress } = Web3ProviderContainer.useContainer();\n  const {\n    setCancelingState,\n    cancelingState,\n  } = WalletConnectPageStateContainer.useContainer();\n  const { marketContract } = ContractContainer.useContainer();\n\n  const onCancel = useCallback(async ({ tradeID }: { tradeID: number }) => {\n    setCancelingState(\"executing\");\n    try {\n      const tx: ethers.providers.TransactionResponse = await marketContract!.cancelTrade(\n        tradeID\n      );\n      const result = await tx.wait();\n      if (result.status == 1) {\n        setCancelingState(\"success\");\n      } else {\n        // 失敗するトランザクションは metamask 実行前にはじかれるはずなのでここは通らないかもしれない\n        console.log(\"failure [result]:\", result);\n        setCancelingState(\"failure\");\n      }\n    } catch (err) {\n      console.log(err);\n      setCancelingState(\"failure\");\n    }\n  }, []);\n\n  if (poster != currentUserAddress && !itemBelongsCurrentUser)\n    return (\n      <p className=\"message\">{t(\"wcp:canceler:action:message:wrongAccount\")}</p>\n    );\n\n  if (itemBelongsCurrentUser || cancelingState == \"success\") return null;\n\n  if (cancelingState == \"executing\")\n    return (\n      <p className=\"message\">{t(\"wcp:canceler:action:message:executing\")}</p>\n    );\n\n  if (cancelingState == \"failure\")\n    return (\n      <p className=\"message\">{t(\"wcp:canceler:action:message:failure\")}</p>\n    );\n\n  return (\n    <button onClick={() => onCancel({ ...{ tradeID } })}>\n      {t(\"wcp:canceler:action:button:cancel\")}\n    </button>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { ItemOwnerAddressContainer } from \"../../hooks/useItemOwnerAddress\";\nimport { WalletConnectPageStateContainer } from \"../../hooks/useWalletConnectPageState\";\nimport { Web3ProviderContainer } from \"../../hooks/useWeb3Provider\";\nimport { ItemInfoTable } from \"../ItemInfoTable\";\nimport \"./../../i18n/config\";\nimport { CancelerActionArea } from \"./CancelerActionArea\";\n\nexport const CancelerView = () => {\n  const { t } = useTranslation([\"wcp\"]);\n  const {\n    cancelingState,\n    setCancelingState,\n  } = WalletConnectPageStateContainer.useContainer();\n  const { itemOwnerAddress } = ItemOwnerAddressContainer.useContainer();\n  const { currentUserAddress } = Web3ProviderContainer.useContainer();\n  const [itemBelongsCurrentUser, setItemBelongsCurrentUser] = useState(false);\n\n  useEffect(() => {\n    setCancelingState(\"init\");\n  }, []);\n\n  // itemOwner が currentUser かチェックする\n  useEffect(() => {\n    if (!currentUserAddress || !itemOwnerAddress) return;\n\n    if (currentUserAddress.toUpperCase() == itemOwnerAddress.toUpperCase()) {\n      setItemBelongsCurrentUser(true);\n    }\n  }, [itemOwnerAddress, currentUserAddress]);\n\n  return (\n    <>\n      {itemBelongsCurrentUser ? (\n        <p>{t(\"wcp:canceler:successTitle\")}</p>\n      ) : (\n        <p>{t(\"wcp:canceler:title\")}</p>\n      )}\n\n      <ItemInfoTable\n        cancelingState={cancelingState}\n        itemBelongsCurrentUser={itemBelongsCurrentUser}\n      />\n      <CancelerActionArea {...{ itemBelongsCurrentUser }} />\n    </>\n  );\n};\n","import React, { useCallback, useEffect } from \"react\";\nimport { useQuery } from \"./hooks/useQuery\";\nimport { WalletConnectPageStateContainer } from \"./hooks/useWalletConnectPageState\";\nimport { ContractContainer } from \"./hooks/useContract\";\nimport { MetadataContainer } from \"./hooks/useMetadata\";\nimport { Web3ProviderContainer } from \"./hooks/useWeb3Provider\";\nimport { providers } from \"ethers\";\nimport { BuyerView } from \"./components/buyerview/BuyerView\";\nimport { SellerView } from \"./components/sellerview/SellerView\";\nimport \"./WalletConnectPage.css\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./i18n/config\";\nimport { CancelerView } from \"./components/cancelerview/CancelerView\";\nimport { CUBIFOX_TOKEN_CONTRACT_ADDRESS } from \"./constants\";\n\nexport const WalletConnectPage = () => {\n  const { t } = useTranslation([\"wcp\"]);\n  const { tradeID, price } = useQuery();\n  const {\n    userType,\n    setUserType,\n    preparingState,\n    buyingState,\n    sellingState,\n    cancelingState,\n    setPreparingState,\n  } = WalletConnectPageStateContainer.useContainer();\n  const {\n    wcProvider,\n    setWCProvider,\n    setupWCProvider,\n    getCurrentUser,\n  } = Web3ProviderContainer.useContainer();\n  const {\n    linkMarketContract,\n    linkTokenContract,\n    tokenContract,\n  } = ContractContainer.useContainer();\n  const { fetchMetadata, metadata } = MetadataContainer.useContainer();\n\n  // 今の状態を確認するためだけの useEffect\n  useEffect(() => {\n    console.log({\n      wcProvider,\n      preparingState,\n      buyingState,\n      sellingState,\n      cancelingState,\n      metadata,\n    });\n  }, [wcProvider, preparingState, buyingState, sellingState, cancelingState]);\n\n  // walletconnectでウォレットとのセッションをつなげる\n  useEffect(() => {\n    if (wcProvider) return;\n\n    setPreparingState(\"setupProvider\");\n    (async () => {\n      await setupWCProvider();\n    })();\n  }, [wcProvider]);\n\n  // currentUserを取得してcontractを使う準備をする\n  useEffect(() => {\n    if (!wcProvider) return;\n\n    // currentUserを取得\n    void getCurrentUser(wcProvider);\n\n    // contractを使う準備\n    const provider = new providers.Web3Provider(wcProvider);\n\n    // なぜかmetamaskから戻ってすぐはcontractを見つけられないので一度リロードする\n    (async () => {\n      if ((await provider.getCode(CUBIFOX_TOKEN_CONTRACT_ADDRESS)) == \"0x\")\n        window.location.reload();\n    })();\n\n    linkMarketContract(provider);\n    linkTokenContract(provider);\n  }, [wcProvider]);\n\n  // metadata を取得\n  useEffect(() => {\n    if (!tokenContract || metadata) return;\n\n    setPreparingState(\"gettingMetadata\");\n    fetchMetadata(tokenContract).then((err) => {\n      if (!err) {\n        setPreparingState(\"ready\");\n        return;\n      }\n    });\n  }, [tokenContract]);\n\n  // setUserType する\n  useEffect(() => {\n    if (tradeID) {\n      if (price) {\n        setUserType(\"buyer\");\n      } else {\n        setUserType(\"canceler\");\n      }\n    } else {\n      setUserType(\"seller\");\n    }\n  }, [tradeID]);\n\n  // Walletとのセッションを切断する\n  const onDisconnect = useCallback(async () => {\n    if (!wcProvider) return;\n\n    await wcProvider.disconnect();\n    window.localStorage.removeItem(\"walletconnect\");\n    setWCProvider(undefined);\n  }, [wcProvider]);\n\n  if (!wcProvider) return <h2>{t(\"wcp:preparing:needWindowReload\")}</h2>;\n  if (preparingState != \"ready\") return <></>;\n\n  return (\n    <>\n      <button onClick={onDisconnect}>{t(\"wcp:preparing:disconnect\")}</button>\n      {userType == \"buyer\" && <BuyerView />}\n      {userType == \"seller\" && <SellerView />}\n      {userType == \"canceler\" && <CancelerView />}\n    </>\n  );\n};\n","import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport logo from \"./logo.svg\";\nimport React from \"react\";\nimport { MetadataContainer } from \"./hooks/useMetadata\";\nimport { Web3ProviderContainer } from \"./hooks/useWeb3Provider\";\nimport { ContractContainer } from \"./hooks/useContract\";\nimport { WalletConnectPageStateContainer } from \"./hooks/useWalletConnectPageState\";\nimport { WalletConnectPage } from \"./WalletConnectPage\";\nimport { ItemOwnerAddressContainer } from \"./hooks/useItemOwnerAddress\";\n\nfunction App() {\n  return (\n    <Router>\n      <WalletConnectPageStateContainer.Provider>\n        <Web3ProviderContainer.Provider>\n          <ContractContainer.Provider>\n            <MetadataContainer.Provider>\n              <ItemOwnerAddressContainer.Provider>\n                <div className=\"App\">\n                  <header className=\"App-header\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                    <Routes>\n                      <Route path=\"/\" element={<WalletConnectPage />} />\n                    </Routes>\n                  </header>\n                </div>\n              </ItemOwnerAddressContainer.Provider>\n            </MetadataContainer.Provider>\n          </ContractContainer.Provider>\n        </Web3ProviderContainer.Provider>\n      </WalletConnectPageStateContainer.Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";"],"sourceRoot":""}