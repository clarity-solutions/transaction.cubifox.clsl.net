{"version":3,"sources":["utils/ipfsURIToGatewayURI.ts","hooks/useQuery.ts","hooks/useMetadata.ts","constants.ts","hooks/useWeb3Provider.ts","hooks/useContract.ts","hooks/useWalletConnectPageState.ts","hooks/useItemOwnerAddress.ts","i18n/config.ts","components/ItemInfoTable.tsx","components/buyerview/BuyerActionArea.tsx","components/buyerview/BuyerView.tsx","components/sellerview/ApproveButton.tsx","components/sellerview/PriceSelect.tsx","utils/weiPrice.ts","components/sellerview/SellButton.tsx","components/sellerview/SellerActionArea.tsx","components/sellerview/SellerView.tsx","components/cancelerview/CancelerActionArea.tsx","components/cancelerview/CancelerView.tsx","WalletConnectPage.tsx","App.tsx","reportWebVitals.ts","index.tsx","logo.svg"],"names":["ipfsURIToGatewayURI","_ref","ipfsURI","startsWith","NFT_STORAGE_IPFS_GATEWAY_URI","replace","useQuery","search","useLocation","query","useMemo","URLSearchParams","tradeID","parseInt","get","poster","itemID","price","MetadataContainer","createContainer","_useState","useState","_useState2","Object","slicedToArray","status","setStatus","_useState3","_useState4","error","setError","_useState5","_useState6","metadata","setMetadata","fetchMetadata","useCallback","asyncToGenerator","regenerator_default","a","mark","_callee","tokenContract","tokenURI","response","wrap","_context","prev","next","sent","fetch","ok","t0","json","t1","t2","text","t3","t4","console","log","message","finish","stop","_x","apply","this","arguments","CUBIFOX_MARKET_CONTRACT_ADDRESS","CUBIFOX_MARKET_CONTRACT_ABI","CUBIFOX_TOKEN_CONTRACT_ABI","Web3ProviderContainer","currentUserAddress","setCurrentUserAddress","wcProvider","setWCProvider","setupWCProvider","provider","WalletConnectProvider","rpc","80001","enable","abrupt","checkNetworkIsCorrect","_ref2","_callee2","currentNetwork","_context2","getNetwork","chainId","getCurrentUser","_ref3","_callee3","accounts","_context3","request","method","_x2","ContractContainer","marketContract","setMarketContract","setTokenContract","linkMarketContract","signer","getSigner","contract","ethers","Contract","connect","err","linkTokenContract","contractWithSigner","WalletConnectPageStateContainer","preparingState","setPreparingState","userType","setUserType","sellingState","setSellingState","_useState7","_useState8","buyingState","setBuyingState","_useState9","_useState10","cancelingState","setCancelingState","ItemOwnerAddressContainer","_useQuery","_WalletConnectPageSta","useContainer","itemOwnerAddress","setItemOwnerAddress","resolveCurrentOwner","address","ownerOf","toUpperCase","undefined","concat","resources","ja","wcp","en","i18n","use","initReactI18next","init","lng","ns","interpolation","escapeValue","debug","process","ItemInfoTable","itemBelongsCurrentUser","t","useTranslation","_ItemOwnerAddressCont","useEffect","react_default","createElement","name","description","style","maxWidth","src","image","Fragment","BuyerActionArea","onBuy","wei","tx","result","utils","parseUnits","toString","executeTrade","value","wait","className","onClick","objectSpread","BuyerView","setItemBelongsCurrentUser","ItemInfoTable_ItemInfoTable","BuyerActionArea_BuyerActionArea","ApproveButton","approve","PriceSelect","unit","setPrice","setUnit","type","min","onChange","e","target","weiPrice","BigInt","Math","pow","SellButton","onSell","openTrade","disabled","SellerActionArea","ApproveButton_ApproveButton","PriceSelect_PriceSelect","SellButton_SellButton","SellerView","timer","setInterval","getApproved","clearInterval","includes","SellerActionArea_SellerActionArea","CancelerActionArea","onCancel","cancelTrade","CancelerView","CancelerActionArea_CancelerActionArea","WalletConnectPage","_Web3ProviderContaine","_ContractContainer$us","_MetadataContainer$us","providers","Web3Provider","then","onDisconnect","disconnect","window","localStorage","removeItem","BuyerView_BuyerView","SellerView_SellerView","CancelerView_CancelerView","App","react_router_dom","Provider","logo","alt","react_router","path","element","WalletConnectPage_WalletConnectPage","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App","module","exports","p"],"mappings":"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","file":"static/js/main.a55e4428.chunk.js","sourcesContent":["const NFT_STORAGE_IPFS_GATEWAY_URI = \"https://nftstorage.link\";\n\nexport const ipfsURIToGatewayURI = ({ ipfsURI }: { ipfsURI: string }) => {\n  if (ipfsURI.startsWith(\"https\")) {\n    return ipfsURI;\n  }\n  const uri =\n    NFT_STORAGE_IPFS_GATEWAY_URI + \"/ipfs/\" + ipfsURI.replace(\"ipfs://\", \"\");\n  return uri;\n};\n","import { useMemo } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\n// [期待するqueryStringのパラメーター]\n// * Userが Seller の時\n//   - itemID\n// * Userが Buyer の時\n//   - tradeID\n//   - poster\n//   - itemID\n//   - price\nexport const useQuery = () => {\n  const { search } = useLocation();\n  const query = useMemo(() => new URLSearchParams(search), [search]);\n\n  return {\n    tradeID: parseInt(query.get(\"tradeID\")!),\n    poster: query.get(\"poster\")!,\n    itemID: parseInt(query.get(\"itemID\")!),\n    price: parseInt(query.get(\"price\")!),\n  };\n};\n","import { useState, useCallback } from \"react\";\nimport { Metadata } from \"../types/Metadata\";\nimport { ipfsURIToGatewayURI } from \"../utils/ipfsURIToGatewayURI\";\nimport { useQuery } from \"./useQuery\";\nimport { ethers } from \"ethers\";\nimport { createContainer } from \"unstated-next\";\n\ntype Status = \"init\" | \"requesting\" | \"done\";\n\nconst useMetadata = () => {\n  const { itemID } = useQuery();\n  const [status, setStatus] = useState<Status>(\"init\");\n  const [error, setError] = useState<string | null>(null);\n  const [metadata, setMetadata] = useState<Metadata>();\n\n  const fetchMetadata = useCallback(\n    async (tokenContract: ethers.Contract) => {\n      setError(null);\n      setStatus(\"requesting\");\n      try {\n        const tokenURI = await tokenContract.tokenURI(itemID);\n        const response = await fetch(\n          ipfsURIToGatewayURI({ ipfsURI: tokenURI })\n        );\n        if (response.ok) {\n          setMetadata(await response.json());\n        } else {\n          setError(await response.text());\n        }\n      } catch (err) {\n        console.log(\"err\", err);\n        setError((err as Error).message);\n      } finally {\n        setStatus(\"done\");\n      }\n    },\n    [itemID]\n  );\n  return { metadata, fetchMetadata, status, error };\n};\n\nexport const MetadataContainer = createContainer(useMetadata);\n","export const CUBIFOX_MARKET_CONTRACT_ADDRESS =\n  \"0xa55E0A9F4DB29c03EfAb9D063B03309b73Cf32AA\";\n\nexport const CUBIFOX_MARKET_CONTRACT_ABI = [\n  \"function tradeIdCounter() view returns (uint256)\",\n  \"function openTrade(uint256 _itemId, uint256 _price)\",\n  \"function executeTrade(uint256 _tradeId) payable\",\n  \"function cancelTrade(uint256 _tradeId)\",\n];\n\nexport const CUBIFOX_TOKEN_CONTRACT_ADDRESS =\n  \"0x9967a309fce3De66A70704431338a3d086509732\";\n\nexport const CUBIFOX_TOKEN_CONTRACT_ABI = [\n  \"function approve(address to, uint256 tokenId)\",\n  \"function getApproved(uint256 tokenId) view returns (address operator)\",\n  \"function tokenURI(uint256 tokenId) public view returns (string memory)\",\n  \"function ownerOf(uint256 tokenId) public view returns (address)\",\n];\n\nexport const WEB3_RPC_URL =\n  \"https://polygon-mumbai.infura.io/v3/1622077723654f928aaae17148265be5\";\n","import WalletConnectProvider from \"@walletconnect/ethereum-provider\";\nimport { ethers, providers } from \"ethers\";\nimport { useState, useCallback } from \"react\";\nimport { createContainer } from \"unstated-next\";\nimport { WEB3_RPC_URL } from \"../constants\";\n\nconst useProvider = () => {\n  const [currentUserAddress, setCurrentUserAddress] = useState<String>();\n  const [wcProvider, setWCProvider] = useState<WalletConnectProvider>();\n\n  const setupWCProvider = useCallback(async () => {\n    const provider = new WalletConnectProvider({\n      rpc: {\n        80001: WEB3_RPC_URL,\n      },\n      // qrcodeModalOptions: {\n      //   mobileLinks: [\n      //     \"rainbow\",\n      //     \"metamask\",\n      //     \"argent\",\n      //     \"trust\",\n      //     \"imtoken\",\n      //     \"pillar\",\n      //   ],\n      // },\n    });\n    //  Enable session (triggers QR Code modal)\n    await provider.enable();\n    setWCProvider(provider);\n    return wcProvider;\n  }, []);\n\n  const checkNetworkIsCorrect = useCallback(\n    async (provider: providers.Web3Provider) => {\n      const currentNetwork = await provider.getNetwork();\n      return currentNetwork.chainId == 80001;\n    },\n    []\n  );\n\n  const getCurrentUser = useCallback(\n    async (provider: WalletConnectProvider) => {\n      const accounts: [string] = await provider.request({\n        method: \"eth_requestAccounts\",\n      });\n      setCurrentUserAddress(accounts[0]);\n    },\n    [setCurrentUserAddress]\n  );\n\n  return {\n    currentUserAddress,\n    wcProvider,\n    setWCProvider,\n    setupWCProvider,\n    checkNetworkIsCorrect,\n    getCurrentUser,\n  };\n};\n\nexport const Web3ProviderContainer = createContainer(useProvider);\n","import { useState, useCallback } from \"react\";\nimport { ethers } from \"ethers\";\nimport { createContainer } from \"unstated-next\";\nimport {\n  CUBIFOX_MARKET_CONTRACT_ADDRESS,\n  CUBIFOX_MARKET_CONTRACT_ABI,\n  CUBIFOX_TOKEN_CONTRACT_ADDRESS,\n  CUBIFOX_TOKEN_CONTRACT_ABI,\n} from \"../constants\";\n\nconst useContract = () => {\n  const [marketContract, setMarketContract] = useState<ethers.Contract>();\n  const [tokenContract, setTokenContract] = useState<ethers.Contract>();\n\n  const linkMarketContract = useCallback(\n    (provider: ethers.providers.Web3Provider) => {\n      try {\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(\n          CUBIFOX_MARKET_CONTRACT_ADDRESS,\n          CUBIFOX_MARKET_CONTRACT_ABI,\n          provider\n        );\n        setMarketContract(contract.connect(signer));\n      } catch (err) {\n        throw err;\n      }\n    },\n    [setMarketContract]\n  );\n\n  const linkTokenContract = useCallback(\n    (provider: ethers.providers.Web3Provider) => {\n      try {\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(\n          CUBIFOX_TOKEN_CONTRACT_ADDRESS,\n          CUBIFOX_TOKEN_CONTRACT_ABI,\n          provider\n        );\n        const contractWithSigner = contract.connect(signer);\n        setTokenContract(contractWithSigner);\n        return contractWithSigner;\n      } catch (err) {\n        throw err;\n      }\n    },\n    [setTokenContract]\n  );\n\n  return {\n    marketContract,\n    tokenContract,\n    linkMarketContract,\n    linkTokenContract,\n  };\n};\n\nexport const ContractContainer = createContainer(useContract);\n","import { useState } from \"react\";\nimport { BuyingState } from \"../types/BuyingState\";\nimport { PreparingState } from \"../types/PreparingState\";\nimport { SellingState } from \"../types/SellingState\";\nimport { UserType } from \"../types/UserType\";\nimport { createContainer } from \"unstated-next\";\nimport { CancelingState } from \"../types/CancelingState\";\n\nconst useWalletConnectPageState = () => {\n  const [preparingState, setPreparingState] = useState<PreparingState>(\n    \"setupProvider\"\n  );\n  const [userType, setUserType] = useState<UserType>();\n  const [sellingState, setSellingState] = useState<SellingState>();\n  const [buyingState, setBuyingState] = useState<BuyingState>();\n  const [cancelingState, setCancelingState] = useState<CancelingState>();\n\n  return {\n    preparingState,\n    setPreparingState,\n    userType,\n    setUserType,\n    sellingState,\n    setSellingState,\n    buyingState,\n    setBuyingState,\n    cancelingState,\n    setCancelingState,\n  };\n};\n\nexport const WalletConnectPageStateContainer = createContainer(\n  useWalletConnectPageState\n);\n","import { useState, useEffect, useCallback } from \"react\";\nimport { BuyingState } from \"../types/BuyingState\";\nimport { SellingState } from \"../types/SellingState\";\nimport { useQuery } from \"./useQuery\";\nimport { ContractContainer } from \"./useContract\";\nimport { CUBIFOX_MARKET_CONTRACT_ADDRESS } from \"../constants\";\nimport { createContainer } from \"unstated-next\";\nimport { WalletConnectPageStateContainer } from \"./useWalletConnectPageState\";\n\n// useItemOwnerAddress() は状況に応じた itemOwnerAddress を返す\n//\n// [BuyerViewの場合]\n// 1. 基本は tokenContract.ownerOf で取得した値\n// 2. 1で取得した値がMarketContractだった場合はposter\n//\n// [SellerViewの場合]\n// 1. 基本は tokenContract.ownerOf で取得した値\n// 2. 1で取得した値がMarketContractだった場合は \"Cubifox Market\"\nconst useItemOwnerAddress = () => {\n  const { poster, itemID } = useQuery();\n  const {\n    buyingState,\n    sellingState,\n  } = WalletConnectPageStateContainer.useContainer();\n  const { tokenContract } = ContractContainer.useContainer();\n  const [itemOwnerAddress, setItemOwnerAddress] = useState<String>();\n\n  const resolveCurrentOwner = useCallback(async () => {\n    if (!tokenContract || !itemID) return;\n    let address: string = \"\";\n\n    // BuyerViewの場合の1\n    // SellerViewの場合の1\n    try {\n      address = await tokenContract.ownerOf(itemID);\n      setItemOwnerAddress(address);\n    } catch (err) {\n      console.log(\"err\", err);\n    }\n\n    // BuyerViewの場合の2\n    if (\n      address.toUpperCase() == CUBIFOX_MARKET_CONTRACT_ADDRESS.toUpperCase() &&\n      buyingState != undefined\n    ) {\n      setItemOwnerAddress(poster);\n    }\n\n    // SellerViewの場合の2\n    if (\n      address.toUpperCase() == CUBIFOX_MARKET_CONTRACT_ADDRESS.toUpperCase() &&\n      sellingState != undefined\n    ) {\n      setItemOwnerAddress(\n        `Cubifox Market (${CUBIFOX_MARKET_CONTRACT_ADDRESS})`\n      );\n    }\n  }, [itemID, tokenContract, sellingState, buyingState]);\n\n  return { itemOwnerAddress, resolveCurrentOwner };\n};\n\nexport const ItemOwnerAddressContainer = createContainer(useItemOwnerAddress);\n","import i18n from \"i18next\";\nimport wcp from \"./ja/wallet_connect_page.json\";\nimport { initReactI18next } from \"react-i18next\";\n\nexport const resources = {\n  ja: {\n    wcp,\n  },\n  en: {\n    wcp,\n  },\n} as const;\n\ni18n.use(initReactI18next).init({\n  lng: \"ja\",\n  ns: [\"wcp\"],\n  interpolation: {\n    escapeValue: false, // not needed for react as it escapes by default\n  },\n  resources,\n  debug: process.env.NODE_ENV === \"development\",\n});\n","import React, { useEffect } from \"react\";\nimport { ItemOwnerAddressContainer } from \"../hooks/useItemOwnerAddress\";\nimport { MetadataContainer } from \"../hooks/useMetadata\";\nimport { useQuery } from \"../hooks/useQuery\";\nimport { BuyingState } from \"../types/BuyingState\";\nimport { SellingState } from \"../types/SellingState\";\nimport { ipfsURIToGatewayURI } from \"../utils/ipfsURIToGatewayURI\";\nimport { Web3ProviderContainer } from \"../hooks/useWeb3Provider\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./../i18n/config\";\nimport { CancelingState } from \"../types/CancelingState\";\n\nexport const ItemInfoTable = ({\n  buyingState,\n  sellingState,\n  cancelingState,\n  itemBelongsCurrentUser,\n}: {\n  buyingState?: BuyingState;\n  sellingState?: SellingState;\n  cancelingState?: CancelingState;\n  itemBelongsCurrentUser?: boolean;\n}) => {\n  const { t } = useTranslation([\"wcp\"]);\n  const { price } = useQuery();\n  const { currentUserAddress } = Web3ProviderContainer.useContainer();\n  const { metadata } = MetadataContainer.useContainer();\n  const {\n    itemOwnerAddress,\n    resolveCurrentOwner,\n  } = ItemOwnerAddressContainer.useContainer();\n\n  useEffect(() => {\n    (async () => {\n      await resolveCurrentOwner();\n    })();\n  }, [buyingState, sellingState, cancelingState, itemOwnerAddress]);\n\n  if (!metadata) return null;\n  return (\n    <table>\n      <tbody>\n        <tr>\n          <th>{t(\"wcp:itemInfo:yourAddress\")}</th>\n          <td>{currentUserAddress}</td>\n        </tr>\n        <tr>\n          <th>{t(\"wcp:itemInfo:itemName\")}</th>\n          <td>{metadata.name}</td>\n        </tr>\n        <tr>\n          <th>{t(\"wcp:itemInfo:itemDescription\")}</th>\n          <td>{metadata.description}</td>\n        </tr>\n        <tr>\n          <th>{t(\"wcp:itemInfo:itemImage\")}</th>\n          <td>\n            <img\n              style={{ maxWidth: \"50vw\" }}\n              src={ipfsURIToGatewayURI({ ipfsURI: metadata.image })}\n            />\n          </td>\n        </tr>\n        <tr>\n          <th>{t(\"wcp:itemInfo:currentOwner\")}</th>\n          <td>{itemOwnerAddress}</td>\n        </tr>\n        {price && !itemBelongsCurrentUser ? (\n          <tr>\n            <th>{t(\"wcp:itemInfo:price\")}</th>\n            <td>{price} Wei MATIC</td>\n          </tr>\n        ) : (\n          <></>\n        )}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useCallback } from \"react\";\nimport { ethers } from \"ethers\";\nimport { useQuery } from \"../../hooks/useQuery\";\nimport { ContractContainer } from \"../../hooks/useContract\";\nimport { WalletConnectPageStateContainer } from \"../../hooks/useWalletConnectPageState\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./../../i18n/config\";\n\nexport const BuyerActionArea = ({\n  itemBelongsCurrentUser,\n}: {\n  itemBelongsCurrentUser: boolean;\n}) => {\n  const { t } = useTranslation([\"wcp\"]);\n  const { tradeID, price } = useQuery();\n  const {\n    setBuyingState,\n    buyingState,\n  } = WalletConnectPageStateContainer.useContainer();\n  const { marketContract } = ContractContainer.useContainer();\n\n  const onBuy = useCallback(\n    async ({ tradeID, price }: { tradeID: number; price: number }) => {\n      setBuyingState(\"executing\");\n      try {\n        const wei = ethers.utils.parseUnits(price.toString(), \"wei\");\n        console.log(\"price: \", wei);\n        const tx: ethers.providers.TransactionResponse = await marketContract!.executeTrade(\n          tradeID,\n          { value: wei }\n        );\n        const result = await tx.wait();\n\n        if (result.status == 1) {\n          setBuyingState(\"success\");\n        } else {\n          // 失敗するトランザクションは metamask 実行前にはじかれるはずなのでここは通らないかもしれない\n          console.log(\"failure [result]:\", result);\n          setBuyingState(\"failure\");\n        }\n      } catch (err) {\n        console.log(err);\n        setBuyingState(\"failure\");\n      }\n    },\n    []\n  );\n\n  if (itemBelongsCurrentUser || buyingState == \"success\") return null;\n\n  if (buyingState == \"executing\")\n    return <p className=\"message\">{t(\"wcp:buyer:action:message:executing\")}</p>;\n\n  if (buyingState == \"failure\")\n    return <p className=\"message\">{t(\"wcp:buyer:action:message:failure\")}</p>;\n\n  return (\n    <button onClick={() => onBuy({ ...{ tradeID, price } })}>\n      {t(\"wcp:buyer:action:button:buy\")}\n    </button>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { ItemInfoTable } from \"../ItemInfoTable\";\nimport { WalletConnectPageStateContainer } from \"../../hooks/useWalletConnectPageState\";\nimport { ItemOwnerAddressContainer } from \"../../hooks/useItemOwnerAddress\";\nimport { Web3ProviderContainer } from \"../../hooks/useWeb3Provider\";\nimport { BuyerActionArea } from \"./BuyerActionArea\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./../../i18n/config\";\n\nexport const BuyerView = () => {\n  const { t } = useTranslation([\"wcp\"]);\n  const {\n    buyingState,\n    setBuyingState,\n  } = WalletConnectPageStateContainer.useContainer();\n  const { itemOwnerAddress } = ItemOwnerAddressContainer.useContainer();\n  const { currentUserAddress } = Web3ProviderContainer.useContainer();\n  const [itemBelongsCurrentUser, setItemBelongsCurrentUser] = useState(false);\n\n  useEffect(() => {\n    setBuyingState(\"init\");\n  }, []);\n\n  // itemOwner が currentUser かチェックする\n  useEffect(() => {\n    if (!currentUserAddress || !itemOwnerAddress) return;\n\n    if (currentUserAddress.toUpperCase() == itemOwnerAddress.toUpperCase()) {\n      setItemBelongsCurrentUser(true);\n    }\n  }, [itemOwnerAddress, currentUserAddress]);\n\n  return (\n    <>\n      {itemBelongsCurrentUser ? (\n        <p>{t(\"wcp:buyer:successTitle\")}</p>\n      ) : (\n        <p>{t(\"wcp:buyer:title\")}</p>\n      )}\n\n      <ItemInfoTable\n        buyingState={buyingState}\n        itemBelongsCurrentUser={itemBelongsCurrentUser}\n      />\n      <BuyerActionArea {...{ itemBelongsCurrentUser }} />\n    </>\n  );\n};\n","import React, { useCallback } from \"react\";\nimport { useQuery } from \"../../hooks/useQuery\";\nimport { ContractContainer } from \"../../hooks/useContract\";\nimport { ethers } from \"ethers\";\nimport { WalletConnectPageStateContainer } from \"../../hooks/useWalletConnectPageState\";\nimport { CUBIFOX_MARKET_CONTRACT_ADDRESS } from \"../../constants\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./../../i18n/config\";\n\n// Contract に ERC721トークン を transfer するために approve してもらう必要がある\n// https://github.com/OpenZeppelin/openzeppelin-contracts/blob/cb3f2ab900e39c5ab6e0de6663edf06f573b834f/contracts/token/ERC721/IERC721.sol#L61-L79\nexport const ApproveButton = () => {\n  const { t } = useTranslation([\"wcp\"]);\n  const { itemID } = useQuery();\n  const { tokenContract } = ContractContainer.useContainer();\n  const { setSellingState } = WalletConnectPageStateContainer.useContainer();\n  const onClick = useCallback(\n    async ({ itemID }: { itemID: number }) => {\n      setSellingState(\"givingPermission\");\n      try {\n        const tx: ethers.providers.TransactionResponse = await tokenContract!.approve(\n          CUBIFOX_MARKET_CONTRACT_ADDRESS,\n          itemID\n        );\n        const result = await tx.wait();\n        if (result.status == 1) {\n          setSellingState(\"permitted\");\n        } else {\n          // 失敗するトランザクションは metamask 実行前にはじかれるはずなのでここは通らないかもしれない\n          setSellingState(\"failure\");\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    [tokenContract]\n  );\n\n  return (\n    <button onClick={() => onClick({ itemID })}>\n      {t(\"wcp:seller:action:button:approve\")}\n    </button>\n  );\n};\n","import React, { ChangeEvent } from \"react\";\nimport { MaticUnit } from \"../../types/MaticUnit\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./../../i18n/config\";\n\nexport const PriceSelect = ({\n  price,\n  unit,\n  setPrice,\n  setUnit,\n}: {\n  price: number;\n  unit: MaticUnit;\n  setPrice: React.Dispatch<React.SetStateAction<number>>;\n  setUnit: React.Dispatch<React.SetStateAction<MaticUnit>>;\n}) => {\n  const { t } = useTranslation([\"wcp\"]);\n  return (\n    <span>\n      <label>{t(\"wcp:seller:action:label:price\")}</label>\n      <input\n        type=\"number\"\n        min=\"0\"\n        value={price}\n        onChange={(e: ChangeEvent<HTMLInputElement>) => {\n          setPrice(parseInt(e.target.value));\n        }}\n      />\n      <select\n        value={unit}\n        onChange={(e) => {\n          setUnit(e.target.value as MaticUnit);\n        }}\n      >\n        <option value=\"weiMatic\">wei MATIC</option>\n        <option value=\"gweiMatic\">gwei MATIC</option>\n        <option value=\"matic\">MATIC</option>\n      </select>\n    </span>\n  );\n};\n","import { MaticUnit } from \"../types/MaticUnit\";\n\nexport const weiPrice = ({\n  price,\n  unit,\n}: {\n  price: number;\n  unit: MaticUnit;\n}): BigInt => {\n  if (unit == \"weiMatic\") {\n    return BigInt(price);\n  } else if (unit == \"gweiMatic\") {\n    return BigInt(price * 10 ** 9);\n  } else {\n    return BigInt(price * 10 ** 18);\n  }\n};\n","import React, { useCallback } from \"react\";\nimport { ethers } from \"ethers\";\nimport { weiPrice } from \"../../utils/weiPrice\";\nimport { MaticUnit } from \"../../types/MaticUnit\";\nimport { useQuery } from \"../../hooks/useQuery\";\nimport { ContractContainer } from \"../../hooks/useContract\";\nimport { WalletConnectPageStateContainer } from \"../../hooks/useWalletConnectPageState\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./../../i18n/config\";\n\nexport const SellButton = ({\n  price,\n  unit,\n}: {\n  price: number;\n  unit: MaticUnit;\n}) => {\n  const { t } = useTranslation([\"wcp\"]);\n  const { itemID } = useQuery();\n  const { marketContract } = ContractContainer.useContainer();\n  const { setSellingState } = WalletConnectPageStateContainer.useContainer();\n\n  const onSell = useCallback(async () => {\n    try {\n      setSellingState(\"executing\");\n      const wei = ethers.utils.parseUnits(\n        weiPrice({ price: price, unit: unit }).toString(),\n        \"wei\"\n      );\n      const tx: ethers.providers.TransactionResponse = await marketContract!.openTrade(\n        itemID,\n        wei\n      );\n      const result = await tx.wait();\n      if (result.status == 1) {\n        setSellingState(\"success\");\n      } else {\n        // 失敗するトランザクションは metamask 実行前にはじかれるはずなのでここは通らないかもしれない\n        setSellingState(\"failure\");\n      }\n    } catch (err) {\n      console.log(err);\n      setSellingState(\"failure\");\n    }\n  }, [marketContract, price]);\n\n  if (price >= 0)\n    return (\n      <button onClick={onSell}>{t(\"wcp:seller:action:button:sell\")}</button>\n    );\n\n  return <button disabled>{t(\"wcp:seller:action:button:sell\")}</button>;\n};\n","import React, { useState } from \"react\";\nimport { MaticUnit } from \"../../types/MaticUnit\";\nimport { ApproveButton } from \"./ApproveButton\";\nimport { PriceSelect } from \"./PriceSelect\";\nimport { SellButton } from \"./SellButton\";\nimport { WalletConnectPageStateContainer } from \"../../hooks/useWalletConnectPageState\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./../../i18n/config\";\n\nexport const SellerActionArea = ({\n  itemBelongsCurrentUser,\n}: {\n  itemBelongsCurrentUser: boolean;\n}) => {\n  const { t } = useTranslation([\"wcp\"]);\n  const [price, setPrice] = useState<number>(0);\n  const [unit, setUnit] = useState<MaticUnit>(\"weiMatic\");\n  const { sellingState } = WalletConnectPageStateContainer.useContainer();\n\n  if (!itemBelongsCurrentUser || sellingState == \"success\") return null;\n\n  if (sellingState == \"init\")\n    return (\n      <>\n        <p className=\"description\">\n          {t(\"wcp:seller:action:message:description\")}\n        </p>\n        <ApproveButton />\n      </>\n    );\n\n  if (sellingState == \"givingPermission\" || sellingState == \"executing\")\n    return (\n      <p className=\"message\">{t(\"wcp:seller:action:message:executing\")}</p>\n    );\n\n  if (sellingState == \"permitted\")\n    return (\n      <>\n        <PriceSelect {...{ price, unit, setPrice, setUnit }} />\n        <SellButton price={price} unit={unit} />\n      </>\n    );\n\n  if (sellingState == \"failure\")\n    return <p className=\"message\">{t(\"wcp:seller:action:message:failure\")}</p>;\n\n  return null;\n};\n","import React, { useCallback, useEffect } from \"react\";\nimport { ItemInfoTable } from \"../ItemInfoTable\";\nimport { SellerActionArea } from \"./SellerActionArea\";\nimport { useQuery } from \"../../hooks/useQuery\";\nimport { ContractContainer } from \"../../hooks/useContract\";\nimport { WalletConnectPageStateContainer } from \"../../hooks/useWalletConnectPageState\";\nimport { CUBIFOX_MARKET_CONTRACT_ADDRESS } from \"../../constants\";\nimport { ItemOwnerAddressContainer } from \"../../hooks/useItemOwnerAddress\";\nimport { Web3ProviderContainer } from \"../../hooks/useWeb3Provider\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./../../i18n/config\";\n\nexport const SellerView = () => {\n  const { t } = useTranslation([\"wcp\"]);\n  const { itemID } = useQuery();\n  const { tokenContract } = ContractContainer.useContainer();\n  const {\n    sellingState,\n    setSellingState,\n  } = WalletConnectPageStateContainer.useContainer();\n  const {\n    itemOwnerAddress,\n    resolveCurrentOwner,\n  } = ItemOwnerAddressContainer.useContainer();\n  const { currentUserAddress } = Web3ProviderContainer.useContainer();\n\n  // sellingStateを初期化\n  useEffect(() => {\n    setSellingState(\"init\");\n  }, []);\n\n  // sellingStateが init か success の時にitemOwnerを再取得する\n  useEffect(() => {\n    if (sellingState == \"success\" || sellingState == \"init\") {\n      (async () => {\n        resolveCurrentOwner();\n      })();\n    }\n  }, [sellingState]);\n\n  // sellingState が givingPermission の時 tokenContract.getApproved() を3秒ごとに実行する\n  useEffect(() => {\n    if (!tokenContract) return;\n    if (sellingState != \"givingPermission\") return;\n\n    const timer = setInterval(async () => {\n      try {\n        const approvedOperator = await tokenContract.getApproved(itemID);\n        if (approvedOperator == CUBIFOX_MARKET_CONTRACT_ADDRESS) {\n          setSellingState(\"permitted\");\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }, 3000);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, [tokenContract, sellingState]);\n\n  const itemBelongsCurrentUser = useCallback(() => {\n    if (!currentUserAddress || !itemOwnerAddress) return false;\n    return currentUserAddress.toUpperCase() === itemOwnerAddress.toUpperCase();\n  }, [currentUserAddress, itemOwnerAddress]);\n\n  return (\n    <>\n      {itemOwnerAddress &&\n        itemOwnerAddress!.includes(CUBIFOX_MARKET_CONTRACT_ADDRESS) && (\n          <p>{t(\"wcp:seller:successTitle\")}</p>\n        )}\n      {itemBelongsCurrentUser() && <p>{t(\"wcp:seller:title\")}</p>}\n\n      <ItemInfoTable sellingState={sellingState} />\n      <SellerActionArea itemBelongsCurrentUser={itemBelongsCurrentUser()} />\n    </>\n  );\n};\n","import React, { useCallback } from \"react\";\nimport { ethers } from \"ethers\";\nimport { useQuery } from \"../../hooks/useQuery\";\nimport { ContractContainer } from \"../../hooks/useContract\";\nimport { WalletConnectPageStateContainer } from \"../../hooks/useWalletConnectPageState\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./../../i18n/config\";\nimport { Web3ProviderContainer } from \"../../hooks/useWeb3Provider\";\n\nexport const CancelerActionArea = ({\n  itemBelongsCurrentUser,\n}: {\n  itemBelongsCurrentUser: boolean;\n}) => {\n  const { t } = useTranslation([\"wcp\"]);\n  const { tradeID, poster } = useQuery();\n  const { currentUserAddress } = Web3ProviderContainer.useContainer();\n  const {\n    setCancelingState,\n    cancelingState,\n  } = WalletConnectPageStateContainer.useContainer();\n  const { marketContract } = ContractContainer.useContainer();\n\n  const onCancel = useCallback(async ({ tradeID }: { tradeID: number }) => {\n    setCancelingState(\"executing\");\n    try {\n      const tx: ethers.providers.TransactionResponse = await marketContract!.cancelTrade(\n        tradeID\n      );\n      const result = await tx.wait();\n      if (result.status == 1) {\n        setCancelingState(\"success\");\n      } else {\n        // 失敗するトランザクションは metamask 実行前にはじかれるはずなのでここは通らないかもしれない\n        console.log(\"failure [result]:\", result);\n        setCancelingState(\"failure\");\n      }\n    } catch (err) {\n      console.log(err);\n      setCancelingState(\"failure\");\n    }\n  }, []);\n\n  if (poster != currentUserAddress && !itemBelongsCurrentUser)\n    return (\n      <p className=\"message\">{t(\"wcp:canceler:action:message:wrongAccount\")}</p>\n    );\n\n  if (itemBelongsCurrentUser || cancelingState == \"success\") return null;\n\n  if (cancelingState == \"executing\")\n    return (\n      <p className=\"message\">{t(\"wcp:canceler:action:message:executing\")}</p>\n    );\n\n  if (cancelingState == \"failure\")\n    return (\n      <p className=\"message\">{t(\"wcp:canceler:action:message:failure\")}</p>\n    );\n\n  return (\n    <button onClick={() => onCancel({ ...{ tradeID } })}>\n      {t(\"wcp:canceler:action:button:cancel\")}\n    </button>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { ItemOwnerAddressContainer } from \"../../hooks/useItemOwnerAddress\";\nimport { WalletConnectPageStateContainer } from \"../../hooks/useWalletConnectPageState\";\nimport { Web3ProviderContainer } from \"../../hooks/useWeb3Provider\";\nimport { ItemInfoTable } from \"../ItemInfoTable\";\nimport \"./../../i18n/config\";\nimport { CancelerActionArea } from \"./CancelerActionArea\";\n\nexport const CancelerView = () => {\n  const { t } = useTranslation([\"wcp\"]);\n  const {\n    cancelingState,\n    setCancelingState,\n  } = WalletConnectPageStateContainer.useContainer();\n  const { itemOwnerAddress } = ItemOwnerAddressContainer.useContainer();\n  const { currentUserAddress } = Web3ProviderContainer.useContainer();\n  const [itemBelongsCurrentUser, setItemBelongsCurrentUser] = useState(false);\n\n  useEffect(() => {\n    setCancelingState(\"init\");\n  }, []);\n\n  // itemOwner が currentUser かチェックする\n  useEffect(() => {\n    if (!currentUserAddress || !itemOwnerAddress) return;\n\n    if (currentUserAddress.toUpperCase() == itemOwnerAddress.toUpperCase()) {\n      setItemBelongsCurrentUser(true);\n    }\n  }, [itemOwnerAddress, currentUserAddress]);\n\n  return (\n    <>\n      {itemBelongsCurrentUser ? (\n        <p>{t(\"wcp:canceler:successTitle\")}</p>\n      ) : (\n        <p>{t(\"wcp:canceler:title\")}</p>\n      )}\n\n      <ItemInfoTable\n        cancelingState={cancelingState}\n        itemBelongsCurrentUser={itemBelongsCurrentUser}\n      />\n      <CancelerActionArea {...{ itemBelongsCurrentUser }} />\n    </>\n  );\n};\n","import React, { useCallback, useEffect } from \"react\";\nimport { useQuery } from \"./hooks/useQuery\";\nimport { WalletConnectPageStateContainer } from \"./hooks/useWalletConnectPageState\";\nimport { ContractContainer } from \"./hooks/useContract\";\nimport { MetadataContainer } from \"./hooks/useMetadata\";\nimport { Web3ProviderContainer } from \"./hooks/useWeb3Provider\";\nimport { providers } from \"ethers\";\nimport { BuyerView } from \"./components/buyerview/BuyerView\";\nimport { SellerView } from \"./components/sellerview/SellerView\";\nimport \"./WalletConnectPage.css\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./i18n/config\";\nimport { CancelerView } from \"./components/cancelerview/CancelerView\";\n\nexport const WalletConnectPage = () => {\n  const { t } = useTranslation([\"wcp\"]);\n  const { tradeID, price } = useQuery();\n  const {\n    userType,\n    setUserType,\n    preparingState,\n    buyingState,\n    sellingState,\n    cancelingState,\n    setPreparingState,\n  } = WalletConnectPageStateContainer.useContainer();\n  const {\n    wcProvider,\n    setWCProvider,\n    setupWCProvider,\n    getCurrentUser,\n  } = Web3ProviderContainer.useContainer();\n  const {\n    linkMarketContract,\n    linkTokenContract,\n  } = ContractContainer.useContainer();\n  const { fetchMetadata, metadata } = MetadataContainer.useContainer();\n\n  // 今の状態を確認するためだけの useEffect\n  useEffect(() => {\n    console.log({\n      preparingState,\n      buyingState,\n      sellingState,\n      cancelingState,\n      metadata,\n    });\n  }, [preparingState, buyingState, sellingState, cancelingState]);\n\n  // walletconnectでウォレットとのセッションをつなげる\n  useEffect(() => {\n    if (wcProvider) return;\n\n    setPreparingState(\"setupProvider\");\n    (async () => {\n      await setupWCProvider();\n    })();\n  }, [wcProvider]);\n\n  // currentUser、metadata を取得\n  useEffect(() => {\n    if (!wcProvider) return;\n\n    void getCurrentUser(wcProvider);\n\n    const provider = new providers.Web3Provider(wcProvider);\n    linkMarketContract(provider);\n    const tokenContract = linkTokenContract(provider);\n\n    setPreparingState(\"gettingMetadata\");\n    void fetchMetadata(tokenContract).then(() => {\n      setPreparingState(\"ready\");\n    });\n  }, [wcProvider]);\n\n  // setUserType する\n  useEffect(() => {\n    if (tradeID) {\n      if (price) {\n        setUserType(\"buyer\");\n      } else {\n        setUserType(\"canceler\");\n      }\n    } else {\n      setUserType(\"seller\");\n    }\n  }, [tradeID]);\n\n  // Walletとのセッションを切断する\n  const onDisconnect = useCallback(async () => {\n    if (!wcProvider) return;\n\n    await wcProvider.disconnect();\n    window.localStorage.removeItem(\"walletconnect\");\n    setWCProvider(undefined);\n  }, [wcProvider]);\n\n  if (!wcProvider) return <h2>{t(\"wcp:preparing:needWindowReload\")}</h2>;\n  if (preparingState != \"ready\") return <></>;\n\n  return (\n    <>\n      <button onClick={onDisconnect}>{t(\"wcp:preparing:disconnect\")}</button>\n      {userType == \"buyer\" && <BuyerView />}\n      {userType == \"seller\" && <SellerView />}\n      {userType == \"canceler\" && <CancelerView />}\n    </>\n  );\n};\n","import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport logo from \"./logo.svg\";\nimport React from \"react\";\nimport { MetadataContainer } from \"./hooks/useMetadata\";\nimport { Web3ProviderContainer } from \"./hooks/useWeb3Provider\";\nimport { ContractContainer } from \"./hooks/useContract\";\nimport { WalletConnectPageStateContainer } from \"./hooks/useWalletConnectPageState\";\nimport { WalletConnectPage } from \"./WalletConnectPage\";\nimport { ItemOwnerAddressContainer } from \"./hooks/useItemOwnerAddress\";\n\nfunction App() {\n  return (\n    <Router>\n      <WalletConnectPageStateContainer.Provider>\n        <Web3ProviderContainer.Provider>\n          <ContractContainer.Provider>\n            <MetadataContainer.Provider>\n              <ItemOwnerAddressContainer.Provider>\n                <div className=\"App\">\n                  <header className=\"App-header\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                    <Routes>\n                      <Route path=\"/\" element={<WalletConnectPage />} />\n                    </Routes>\n                  </header>\n                </div>\n              </ItemOwnerAddressContainer.Provider>\n            </MetadataContainer.Provider>\n          </ContractContainer.Provider>\n        </Web3ProviderContainer.Provider>\n      </WalletConnectPageStateContainer.Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";"],"sourceRoot":""}